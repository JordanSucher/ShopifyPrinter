// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  ProductFiles ProductFile[]
}

model File {
  id                  Int                   @id @default(autoincrement())
  name                String
  latestPrinterUsedId Int?
  printers            FilePrinterMappings[]
  ProductFiles        ProductFile[]
  latestPrinterUsed   Printer?               @relation(fields: [latestPrinterUsedId], references: [id])
}

model ProductFile {
  productId     Int
  fileId        Int
  product       Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  file          File    @relation(fields: [fileId], references: [id])
  displayName   String
  localFilePath String?
  data          Bytes?  @db.ByteA

  @@id([productId, fileId])
}

model Printer {
  id               Int                   @id @default(autoincrement())
  name             String
  files            FilePrinterMappings[]
  filesTouchedLast File[]
}

model FilePrinterMappings {
  fileId    Int
  printerId Int
  file      File    @relation(fields: [fileId], references: [id])
  printer   Printer @relation(fields: [printerId], references: [id], onDelete: Cascade)

  @@id([fileId, printerId])
}

model PrintJob {
  id           Int      @id @default(autoincrement())
  sku          String
  productName  String
  lineItemId   Int
  orderId      Int
  status       Status   @default(PENDING)
  printJobName String?
  createdAt    DateTime
  updatedAt    DateTime
}

enum Status {
  QUEUED
  PENDING
  PRINTING
  DONE
}
